/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.wssync.CloneTargetMode', null, global);
goog.exportSymbol('proto.wssync.DisposeWorkspaceRequest', null, global);
goog.exportSymbol('proto.wssync.DisposeWorkspaceResponse', null, global);
goog.exportSymbol('proto.wssync.EmptyInitializer', null, global);
goog.exportSymbol('proto.wssync.GitAuthMethod', null, global);
goog.exportSymbol('proto.wssync.GitConfig', null, global);
goog.exportSymbol('proto.wssync.GitInitializer', null, global);
goog.exportSymbol('proto.wssync.GitStatus', null, global);
goog.exportSymbol('proto.wssync.InitWorkspaceRequest', null, global);
goog.exportSymbol('proto.wssync.InitWorkspaceResponse', null, global);
goog.exportSymbol('proto.wssync.PrebuildInitializer', null, global);
goog.exportSymbol('proto.wssync.SnapshotInitializer', null, global);
goog.exportSymbol('proto.wssync.TakeSnapshotRequest', null, global);
goog.exportSymbol('proto.wssync.TakeSnapshotResponse', null, global);
goog.exportSymbol('proto.wssync.WaitForInitRequest', null, global);
goog.exportSymbol('proto.wssync.WaitForInitResponse', null, global);
goog.exportSymbol('proto.wssync.WorkspaceContentState', null, global);
goog.exportSymbol('proto.wssync.WorkspaceInitializer', null, global);
goog.exportSymbol('proto.wssync.WorkspaceMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.InitWorkspaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.InitWorkspaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.InitWorkspaceRequest.displayName = 'proto.wssync.InitWorkspaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.WorkspaceMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.WorkspaceMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.WorkspaceMetadata.displayName = 'proto.wssync.WorkspaceMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.WorkspaceInitializer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wssync.WorkspaceInitializer.oneofGroups_);
};
goog.inherits(proto.wssync.WorkspaceInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.WorkspaceInitializer.displayName = 'proto.wssync.WorkspaceInitializer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.EmptyInitializer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.EmptyInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.EmptyInitializer.displayName = 'proto.wssync.EmptyInitializer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.GitInitializer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.GitInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.GitInitializer.displayName = 'proto.wssync.GitInitializer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.GitConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.GitConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.GitConfig.displayName = 'proto.wssync.GitConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.SnapshotInitializer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.SnapshotInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.SnapshotInitializer.displayName = 'proto.wssync.SnapshotInitializer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.PrebuildInitializer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.PrebuildInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.PrebuildInitializer.displayName = 'proto.wssync.PrebuildInitializer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.InitWorkspaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.InitWorkspaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.InitWorkspaceResponse.displayName = 'proto.wssync.InitWorkspaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.WaitForInitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.WaitForInitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.WaitForInitRequest.displayName = 'proto.wssync.WaitForInitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.WaitForInitResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.WaitForInitResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.WaitForInitResponse.displayName = 'proto.wssync.WaitForInitResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.TakeSnapshotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.TakeSnapshotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.TakeSnapshotRequest.displayName = 'proto.wssync.TakeSnapshotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.TakeSnapshotResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.TakeSnapshotResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.TakeSnapshotResponse.displayName = 'proto.wssync.TakeSnapshotResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.DisposeWorkspaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.DisposeWorkspaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.DisposeWorkspaceRequest.displayName = 'proto.wssync.DisposeWorkspaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.DisposeWorkspaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wssync.DisposeWorkspaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.DisposeWorkspaceResponse.displayName = 'proto.wssync.DisposeWorkspaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wssync.GitStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wssync.GitStatus.repeatedFields_, null);
};
goog.inherits(proto.wssync.GitStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wssync.GitStatus.displayName = 'proto.wssync.GitStatus';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.InitWorkspaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.InitWorkspaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.InitWorkspaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.InitWorkspaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.wssync.WorkspaceMetadata.toObject(includeInstance, f),
    initializer: (f = msg.getInitializer()) && proto.wssync.WorkspaceInitializer.toObject(includeInstance, f),
    fullWorkspaceBackup: jspb.Message.getFieldWithDefault(msg, 4, false),
    contentManifest: msg.getContentManifest_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.InitWorkspaceRequest}
 */
proto.wssync.InitWorkspaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.InitWorkspaceRequest;
  return proto.wssync.InitWorkspaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.InitWorkspaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.InitWorkspaceRequest}
 */
proto.wssync.InitWorkspaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.wssync.WorkspaceMetadata;
      reader.readMessage(value,proto.wssync.WorkspaceMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = new proto.wssync.WorkspaceInitializer;
      reader.readMessage(value,proto.wssync.WorkspaceInitializer.deserializeBinaryFromReader);
      msg.setInitializer(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullWorkspaceBackup(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContentManifest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.InitWorkspaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.InitWorkspaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.InitWorkspaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.InitWorkspaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wssync.WorkspaceMetadata.serializeBinaryToWriter
    );
  }
  f = message.getInitializer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.wssync.WorkspaceInitializer.serializeBinaryToWriter
    );
  }
  f = message.getFullWorkspaceBackup();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getContentManifest_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wssync.InitWorkspaceRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.InitWorkspaceRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional WorkspaceMetadata metadata = 2;
 * @return {?proto.wssync.WorkspaceMetadata}
 */
proto.wssync.InitWorkspaceRequest.prototype.getMetadata = function() {
  return /** @type{?proto.wssync.WorkspaceMetadata} */ (
    jspb.Message.getWrapperField(this, proto.wssync.WorkspaceMetadata, 2));
};


/** @param {?proto.wssync.WorkspaceMetadata|undefined} value */
proto.wssync.InitWorkspaceRequest.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.InitWorkspaceRequest.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.InitWorkspaceRequest.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional WorkspaceInitializer initializer = 3;
 * @return {?proto.wssync.WorkspaceInitializer}
 */
proto.wssync.InitWorkspaceRequest.prototype.getInitializer = function() {
  return /** @type{?proto.wssync.WorkspaceInitializer} */ (
    jspb.Message.getWrapperField(this, proto.wssync.WorkspaceInitializer, 3));
};


/** @param {?proto.wssync.WorkspaceInitializer|undefined} value */
proto.wssync.InitWorkspaceRequest.prototype.setInitializer = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.InitWorkspaceRequest.prototype.clearInitializer = function() {
  this.setInitializer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.InitWorkspaceRequest.prototype.hasInitializer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool full_workspace_backup = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.wssync.InitWorkspaceRequest.prototype.getFullWorkspaceBackup = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.wssync.InitWorkspaceRequest.prototype.setFullWorkspaceBackup = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bytes content_manifest = 5;
 * @return {!(string|Uint8Array)}
 */
proto.wssync.InitWorkspaceRequest.prototype.getContentManifest = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes content_manifest = 5;
 * This is a type-conversion wrapper around `getContentManifest()`
 * @return {string}
 */
proto.wssync.InitWorkspaceRequest.prototype.getContentManifest_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContentManifest()));
};


/**
 * optional bytes content_manifest = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContentManifest()`
 * @return {!Uint8Array}
 */
proto.wssync.InitWorkspaceRequest.prototype.getContentManifest_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContentManifest()));
};


/** @param {!(string|Uint8Array)} value */
proto.wssync.InitWorkspaceRequest.prototype.setContentManifest = function(value) {
  jspb.Message.setProto3BytesField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.WorkspaceMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.WorkspaceMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.WorkspaceMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.WorkspaceMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    owner: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metaId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.WorkspaceMetadata}
 */
proto.wssync.WorkspaceMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.WorkspaceMetadata;
  return proto.wssync.WorkspaceMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.WorkspaceMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.WorkspaceMetadata}
 */
proto.wssync.WorkspaceMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetaId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.WorkspaceMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.WorkspaceMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.WorkspaceMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.WorkspaceMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetaId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string owner = 1;
 * @return {string}
 */
proto.wssync.WorkspaceMetadata.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.WorkspaceMetadata.prototype.setOwner = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string meta_id = 2;
 * @return {string}
 */
proto.wssync.WorkspaceMetadata.prototype.getMetaId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.wssync.WorkspaceMetadata.prototype.setMetaId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wssync.WorkspaceInitializer.oneofGroups_ = [[6,7,8,9]];

/**
 * @enum {number}
 */
proto.wssync.WorkspaceInitializer.SpecCase = {
  SPEC_NOT_SET: 0,
  EMPTY: 6,
  GIT: 7,
  SNAPSHOT: 8,
  PREBUILD: 9
};

/**
 * @return {proto.wssync.WorkspaceInitializer.SpecCase}
 */
proto.wssync.WorkspaceInitializer.prototype.getSpecCase = function() {
  return /** @type {proto.wssync.WorkspaceInitializer.SpecCase} */(jspb.Message.computeOneofCase(this, proto.wssync.WorkspaceInitializer.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.WorkspaceInitializer.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.WorkspaceInitializer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.WorkspaceInitializer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.WorkspaceInitializer.toObject = function(includeInstance, msg) {
  var f, obj = {
    empty: (f = msg.getEmpty()) && proto.wssync.EmptyInitializer.toObject(includeInstance, f),
    git: (f = msg.getGit()) && proto.wssync.GitInitializer.toObject(includeInstance, f),
    snapshot: (f = msg.getSnapshot()) && proto.wssync.SnapshotInitializer.toObject(includeInstance, f),
    prebuild: (f = msg.getPrebuild()) && proto.wssync.PrebuildInitializer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.WorkspaceInitializer}
 */
proto.wssync.WorkspaceInitializer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.WorkspaceInitializer;
  return proto.wssync.WorkspaceInitializer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.WorkspaceInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.WorkspaceInitializer}
 */
proto.wssync.WorkspaceInitializer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new proto.wssync.EmptyInitializer;
      reader.readMessage(value,proto.wssync.EmptyInitializer.deserializeBinaryFromReader);
      msg.setEmpty(value);
      break;
    case 7:
      var value = new proto.wssync.GitInitializer;
      reader.readMessage(value,proto.wssync.GitInitializer.deserializeBinaryFromReader);
      msg.setGit(value);
      break;
    case 8:
      var value = new proto.wssync.SnapshotInitializer;
      reader.readMessage(value,proto.wssync.SnapshotInitializer.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    case 9:
      var value = new proto.wssync.PrebuildInitializer;
      reader.readMessage(value,proto.wssync.PrebuildInitializer.deserializeBinaryFromReader);
      msg.setPrebuild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.WorkspaceInitializer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.WorkspaceInitializer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.WorkspaceInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.WorkspaceInitializer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmpty();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.wssync.EmptyInitializer.serializeBinaryToWriter
    );
  }
  f = message.getGit();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.wssync.GitInitializer.serializeBinaryToWriter
    );
  }
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.wssync.SnapshotInitializer.serializeBinaryToWriter
    );
  }
  f = message.getPrebuild();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.wssync.PrebuildInitializer.serializeBinaryToWriter
    );
  }
};


/**
 * optional EmptyInitializer empty = 6;
 * @return {?proto.wssync.EmptyInitializer}
 */
proto.wssync.WorkspaceInitializer.prototype.getEmpty = function() {
  return /** @type{?proto.wssync.EmptyInitializer} */ (
    jspb.Message.getWrapperField(this, proto.wssync.EmptyInitializer, 6));
};


/** @param {?proto.wssync.EmptyInitializer|undefined} value */
proto.wssync.WorkspaceInitializer.prototype.setEmpty = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.wssync.WorkspaceInitializer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.WorkspaceInitializer.prototype.clearEmpty = function() {
  this.setEmpty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.WorkspaceInitializer.prototype.hasEmpty = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GitInitializer git = 7;
 * @return {?proto.wssync.GitInitializer}
 */
proto.wssync.WorkspaceInitializer.prototype.getGit = function() {
  return /** @type{?proto.wssync.GitInitializer} */ (
    jspb.Message.getWrapperField(this, proto.wssync.GitInitializer, 7));
};


/** @param {?proto.wssync.GitInitializer|undefined} value */
proto.wssync.WorkspaceInitializer.prototype.setGit = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.wssync.WorkspaceInitializer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.WorkspaceInitializer.prototype.clearGit = function() {
  this.setGit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.WorkspaceInitializer.prototype.hasGit = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional SnapshotInitializer snapshot = 8;
 * @return {?proto.wssync.SnapshotInitializer}
 */
proto.wssync.WorkspaceInitializer.prototype.getSnapshot = function() {
  return /** @type{?proto.wssync.SnapshotInitializer} */ (
    jspb.Message.getWrapperField(this, proto.wssync.SnapshotInitializer, 8));
};


/** @param {?proto.wssync.SnapshotInitializer|undefined} value */
proto.wssync.WorkspaceInitializer.prototype.setSnapshot = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.wssync.WorkspaceInitializer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.WorkspaceInitializer.prototype.clearSnapshot = function() {
  this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.WorkspaceInitializer.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional PrebuildInitializer prebuild = 9;
 * @return {?proto.wssync.PrebuildInitializer}
 */
proto.wssync.WorkspaceInitializer.prototype.getPrebuild = function() {
  return /** @type{?proto.wssync.PrebuildInitializer} */ (
    jspb.Message.getWrapperField(this, proto.wssync.PrebuildInitializer, 9));
};


/** @param {?proto.wssync.PrebuildInitializer|undefined} value */
proto.wssync.WorkspaceInitializer.prototype.setPrebuild = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.wssync.WorkspaceInitializer.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.WorkspaceInitializer.prototype.clearPrebuild = function() {
  this.setPrebuild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.WorkspaceInitializer.prototype.hasPrebuild = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.EmptyInitializer.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.EmptyInitializer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.EmptyInitializer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.EmptyInitializer.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.EmptyInitializer}
 */
proto.wssync.EmptyInitializer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.EmptyInitializer;
  return proto.wssync.EmptyInitializer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.EmptyInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.EmptyInitializer}
 */
proto.wssync.EmptyInitializer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.EmptyInitializer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.EmptyInitializer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.EmptyInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.EmptyInitializer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.GitInitializer.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.GitInitializer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.GitInitializer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.GitInitializer.toObject = function(includeInstance, msg) {
  var f, obj = {
    remoteUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    upstreamRemoteUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
    targetMode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cloneTaget: jspb.Message.getFieldWithDefault(msg, 4, ""),
    checkoutLocation: jspb.Message.getFieldWithDefault(msg, 5, ""),
    config: (f = msg.getConfig()) && proto.wssync.GitConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.GitInitializer}
 */
proto.wssync.GitInitializer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.GitInitializer;
  return proto.wssync.GitInitializer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.GitInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.GitInitializer}
 */
proto.wssync.GitInitializer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteUri(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpstreamRemoteUri(value);
      break;
    case 3:
      var value = /** @type {!proto.wssync.CloneTargetMode} */ (reader.readEnum());
      msg.setTargetMode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloneTaget(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCheckoutLocation(value);
      break;
    case 6:
      var value = new proto.wssync.GitConfig;
      reader.readMessage(value,proto.wssync.GitConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.GitInitializer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.GitInitializer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.GitInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.GitInitializer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemoteUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUpstreamRemoteUri();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTargetMode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getCloneTaget();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCheckoutLocation();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.wssync.GitConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string remote_uri = 1;
 * @return {string}
 */
proto.wssync.GitInitializer.prototype.getRemoteUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.GitInitializer.prototype.setRemoteUri = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string upstream_Remote_uri = 2;
 * @return {string}
 */
proto.wssync.GitInitializer.prototype.getUpstreamRemoteUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.wssync.GitInitializer.prototype.setUpstreamRemoteUri = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CloneTargetMode target_mode = 3;
 * @return {!proto.wssync.CloneTargetMode}
 */
proto.wssync.GitInitializer.prototype.getTargetMode = function() {
  return /** @type {!proto.wssync.CloneTargetMode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.wssync.CloneTargetMode} value */
proto.wssync.GitInitializer.prototype.setTargetMode = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string clone_taget = 4;
 * @return {string}
 */
proto.wssync.GitInitializer.prototype.getCloneTaget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.wssync.GitInitializer.prototype.setCloneTaget = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string checkout_location = 5;
 * @return {string}
 */
proto.wssync.GitInitializer.prototype.getCheckoutLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.wssync.GitInitializer.prototype.setCheckoutLocation = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional GitConfig config = 6;
 * @return {?proto.wssync.GitConfig}
 */
proto.wssync.GitInitializer.prototype.getConfig = function() {
  return /** @type{?proto.wssync.GitConfig} */ (
    jspb.Message.getWrapperField(this, proto.wssync.GitConfig, 6));
};


/** @param {?proto.wssync.GitConfig|undefined} value */
proto.wssync.GitInitializer.prototype.setConfig = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.GitInitializer.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.GitInitializer.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.GitConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.GitConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.GitConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.GitConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    customConfigMap: (f = msg.getCustomConfigMap()) ? f.toObject(includeInstance, undefined) : [],
    authentication: jspb.Message.getFieldWithDefault(msg, 2, 0),
    authUser: jspb.Message.getFieldWithDefault(msg, 3, ""),
    authPassword: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.GitConfig}
 */
proto.wssync.GitConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.GitConfig;
  return proto.wssync.GitConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.GitConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.GitConfig}
 */
proto.wssync.GitConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getCustomConfigMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 2:
      var value = /** @type {!proto.wssync.GitAuthMethod} */ (reader.readEnum());
      msg.setAuthentication(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.GitConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.GitConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.GitConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.GitConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomConfigMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAuthentication();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAuthUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAuthPassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * map<string, string> custom_config = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.wssync.GitConfig.prototype.getCustomConfigMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.wssync.GitConfig.prototype.clearCustomConfigMap = function() {
  this.getCustomConfigMap().clear();
};


/**
 * optional GitAuthMethod authentication = 2;
 * @return {!proto.wssync.GitAuthMethod}
 */
proto.wssync.GitConfig.prototype.getAuthentication = function() {
  return /** @type {!proto.wssync.GitAuthMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.wssync.GitAuthMethod} value */
proto.wssync.GitConfig.prototype.setAuthentication = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string auth_user = 3;
 * @return {string}
 */
proto.wssync.GitConfig.prototype.getAuthUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.wssync.GitConfig.prototype.setAuthUser = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string auth_password = 4;
 * @return {string}
 */
proto.wssync.GitConfig.prototype.getAuthPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.wssync.GitConfig.prototype.setAuthPassword = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.SnapshotInitializer.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.SnapshotInitializer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.SnapshotInitializer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.SnapshotInitializer.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshot: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.SnapshotInitializer}
 */
proto.wssync.SnapshotInitializer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.SnapshotInitializer;
  return proto.wssync.SnapshotInitializer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.SnapshotInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.SnapshotInitializer}
 */
proto.wssync.SnapshotInitializer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.SnapshotInitializer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.SnapshotInitializer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.SnapshotInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.SnapshotInitializer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshot();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string snapshot = 1;
 * @return {string}
 */
proto.wssync.SnapshotInitializer.prototype.getSnapshot = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.SnapshotInitializer.prototype.setSnapshot = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.PrebuildInitializer.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.PrebuildInitializer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.PrebuildInitializer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.PrebuildInitializer.toObject = function(includeInstance, msg) {
  var f, obj = {
    prebuild: (f = msg.getPrebuild()) && proto.wssync.SnapshotInitializer.toObject(includeInstance, f),
    git: (f = msg.getGit()) && proto.wssync.GitInitializer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.PrebuildInitializer}
 */
proto.wssync.PrebuildInitializer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.PrebuildInitializer;
  return proto.wssync.PrebuildInitializer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.PrebuildInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.PrebuildInitializer}
 */
proto.wssync.PrebuildInitializer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wssync.SnapshotInitializer;
      reader.readMessage(value,proto.wssync.SnapshotInitializer.deserializeBinaryFromReader);
      msg.setPrebuild(value);
      break;
    case 2:
      var value = new proto.wssync.GitInitializer;
      reader.readMessage(value,proto.wssync.GitInitializer.deserializeBinaryFromReader);
      msg.setGit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.PrebuildInitializer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.PrebuildInitializer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.PrebuildInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.PrebuildInitializer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrebuild();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wssync.SnapshotInitializer.serializeBinaryToWriter
    );
  }
  f = message.getGit();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wssync.GitInitializer.serializeBinaryToWriter
    );
  }
};


/**
 * optional SnapshotInitializer prebuild = 1;
 * @return {?proto.wssync.SnapshotInitializer}
 */
proto.wssync.PrebuildInitializer.prototype.getPrebuild = function() {
  return /** @type{?proto.wssync.SnapshotInitializer} */ (
    jspb.Message.getWrapperField(this, proto.wssync.SnapshotInitializer, 1));
};


/** @param {?proto.wssync.SnapshotInitializer|undefined} value */
proto.wssync.PrebuildInitializer.prototype.setPrebuild = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.PrebuildInitializer.prototype.clearPrebuild = function() {
  this.setPrebuild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.PrebuildInitializer.prototype.hasPrebuild = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GitInitializer git = 2;
 * @return {?proto.wssync.GitInitializer}
 */
proto.wssync.PrebuildInitializer.prototype.getGit = function() {
  return /** @type{?proto.wssync.GitInitializer} */ (
    jspb.Message.getWrapperField(this, proto.wssync.GitInitializer, 2));
};


/** @param {?proto.wssync.GitInitializer|undefined} value */
proto.wssync.PrebuildInitializer.prototype.setGit = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.PrebuildInitializer.prototype.clearGit = function() {
  this.setGit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.PrebuildInitializer.prototype.hasGit = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.InitWorkspaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.InitWorkspaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.InitWorkspaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.InitWorkspaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.InitWorkspaceResponse}
 */
proto.wssync.InitWorkspaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.InitWorkspaceResponse;
  return proto.wssync.InitWorkspaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.InitWorkspaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.InitWorkspaceResponse}
 */
proto.wssync.InitWorkspaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.InitWorkspaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.InitWorkspaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.InitWorkspaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.InitWorkspaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.WaitForInitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.WaitForInitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.WaitForInitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.WaitForInitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.WaitForInitRequest}
 */
proto.wssync.WaitForInitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.WaitForInitRequest;
  return proto.wssync.WaitForInitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.WaitForInitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.WaitForInitRequest}
 */
proto.wssync.WaitForInitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.WaitForInitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.WaitForInitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.WaitForInitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.WaitForInitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wssync.WaitForInitRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.WaitForInitRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.WaitForInitResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.WaitForInitResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.WaitForInitResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.WaitForInitResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.WaitForInitResponse}
 */
proto.wssync.WaitForInitResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.WaitForInitResponse;
  return proto.wssync.WaitForInitResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.WaitForInitResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.WaitForInitResponse}
 */
proto.wssync.WaitForInitResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.WaitForInitResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.WaitForInitResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.WaitForInitResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.WaitForInitResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.TakeSnapshotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.TakeSnapshotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.TakeSnapshotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.TakeSnapshotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.TakeSnapshotRequest}
 */
proto.wssync.TakeSnapshotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.TakeSnapshotRequest;
  return proto.wssync.TakeSnapshotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.TakeSnapshotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.TakeSnapshotRequest}
 */
proto.wssync.TakeSnapshotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.TakeSnapshotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.TakeSnapshotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.TakeSnapshotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.TakeSnapshotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wssync.TakeSnapshotRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.TakeSnapshotRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.TakeSnapshotResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.TakeSnapshotResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.TakeSnapshotResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.TakeSnapshotResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.TakeSnapshotResponse}
 */
proto.wssync.TakeSnapshotResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.TakeSnapshotResponse;
  return proto.wssync.TakeSnapshotResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.TakeSnapshotResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.TakeSnapshotResponse}
 */
proto.wssync.TakeSnapshotResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.TakeSnapshotResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.TakeSnapshotResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.TakeSnapshotResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.TakeSnapshotResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.wssync.TakeSnapshotResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.TakeSnapshotResponse.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.DisposeWorkspaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.DisposeWorkspaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.DisposeWorkspaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.DisposeWorkspaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    backup: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.DisposeWorkspaceRequest}
 */
proto.wssync.DisposeWorkspaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.DisposeWorkspaceRequest;
  return proto.wssync.DisposeWorkspaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.DisposeWorkspaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.DisposeWorkspaceRequest}
 */
proto.wssync.DisposeWorkspaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBackup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.DisposeWorkspaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.DisposeWorkspaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.DisposeWorkspaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.DisposeWorkspaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBackup();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.wssync.DisposeWorkspaceRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.DisposeWorkspaceRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool backup = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.wssync.DisposeWorkspaceRequest.prototype.getBackup = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.wssync.DisposeWorkspaceRequest.prototype.setBackup = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.DisposeWorkspaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.DisposeWorkspaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.DisposeWorkspaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.DisposeWorkspaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    gitStatus: (f = msg.getGitStatus()) && proto.wssync.GitStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.DisposeWorkspaceResponse}
 */
proto.wssync.DisposeWorkspaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.DisposeWorkspaceResponse;
  return proto.wssync.DisposeWorkspaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.DisposeWorkspaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.DisposeWorkspaceResponse}
 */
proto.wssync.DisposeWorkspaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wssync.GitStatus;
      reader.readMessage(value,proto.wssync.GitStatus.deserializeBinaryFromReader);
      msg.setGitStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.DisposeWorkspaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.DisposeWorkspaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.DisposeWorkspaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.DisposeWorkspaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGitStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wssync.GitStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional GitStatus git_status = 1;
 * @return {?proto.wssync.GitStatus}
 */
proto.wssync.DisposeWorkspaceResponse.prototype.getGitStatus = function() {
  return /** @type{?proto.wssync.GitStatus} */ (
    jspb.Message.getWrapperField(this, proto.wssync.GitStatus, 1));
};


/** @param {?proto.wssync.GitStatus|undefined} value */
proto.wssync.DisposeWorkspaceResponse.prototype.setGitStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.wssync.DisposeWorkspaceResponse.prototype.clearGitStatus = function() {
  this.setGitStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wssync.DisposeWorkspaceResponse.prototype.hasGitStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wssync.GitStatus.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wssync.GitStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.wssync.GitStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wssync.GitStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.GitStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    branch: jspb.Message.getFieldWithDefault(msg, 1, ""),
    latestCommit: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uncommitedFilesList: jspb.Message.getRepeatedField(msg, 3),
    totalUncommitedFiles: jspb.Message.getFieldWithDefault(msg, 6, 0),
    untrackedFilesList: jspb.Message.getRepeatedField(msg, 4),
    totalUntrackedFiles: jspb.Message.getFieldWithDefault(msg, 7, 0),
    unpushedCommitsList: jspb.Message.getRepeatedField(msg, 5),
    totalUnpushedCommits: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wssync.GitStatus}
 */
proto.wssync.GitStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wssync.GitStatus;
  return proto.wssync.GitStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wssync.GitStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wssync.GitStatus}
 */
proto.wssync.GitStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLatestCommit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addUncommitedFiles(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalUncommitedFiles(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addUntrackedFiles(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalUntrackedFiles(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addUnpushedCommits(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalUnpushedCommits(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wssync.GitStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wssync.GitStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wssync.GitStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wssync.GitStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLatestCommit();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUncommitedFilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getTotalUncommitedFiles();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getUntrackedFilesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getTotalUntrackedFiles();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUnpushedCommitsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getTotalUnpushedCommits();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional string branch = 1;
 * @return {string}
 */
proto.wssync.GitStatus.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.wssync.GitStatus.prototype.setBranch = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string latest_commit = 2;
 * @return {string}
 */
proto.wssync.GitStatus.prototype.getLatestCommit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.wssync.GitStatus.prototype.setLatestCommit = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string uncommited_files = 3;
 * @return {!Array<string>}
 */
proto.wssync.GitStatus.prototype.getUncommitedFilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.wssync.GitStatus.prototype.setUncommitedFilesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.wssync.GitStatus.prototype.addUncommitedFiles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.wssync.GitStatus.prototype.clearUncommitedFilesList = function() {
  this.setUncommitedFilesList([]);
};


/**
 * optional int64 total_uncommited_files = 6;
 * @return {number}
 */
proto.wssync.GitStatus.prototype.getTotalUncommitedFiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.wssync.GitStatus.prototype.setTotalUncommitedFiles = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string untracked_files = 4;
 * @return {!Array<string>}
 */
proto.wssync.GitStatus.prototype.getUntrackedFilesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.wssync.GitStatus.prototype.setUntrackedFilesList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.wssync.GitStatus.prototype.addUntrackedFiles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.wssync.GitStatus.prototype.clearUntrackedFilesList = function() {
  this.setUntrackedFilesList([]);
};


/**
 * optional int64 total_untracked_files = 7;
 * @return {number}
 */
proto.wssync.GitStatus.prototype.getTotalUntrackedFiles = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.wssync.GitStatus.prototype.setTotalUntrackedFiles = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated string unpushed_commits = 5;
 * @return {!Array<string>}
 */
proto.wssync.GitStatus.prototype.getUnpushedCommitsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.wssync.GitStatus.prototype.setUnpushedCommitsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.wssync.GitStatus.prototype.addUnpushedCommits = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.wssync.GitStatus.prototype.clearUnpushedCommitsList = function() {
  this.setUnpushedCommitsList([]);
};


/**
 * optional int64 total_unpushed_commits = 8;
 * @return {number}
 */
proto.wssync.GitStatus.prototype.getTotalUnpushedCommits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.wssync.GitStatus.prototype.setTotalUnpushedCommits = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * @enum {number}
 */
proto.wssync.CloneTargetMode = {
  REMOTE_HEAD: 0,
  REMOTE_COMMIT: 1,
  REMOTE_BRANCH: 2,
  LOCAL_BRANCH: 3
};

/**
 * @enum {number}
 */
proto.wssync.GitAuthMethod = {
  NO_AUTH: 0,
  BASIC_AUTH: 1
};

/**
 * @enum {number}
 */
proto.wssync.WorkspaceContentState = {
  NONE: 0,
  SETTING_UP: 1,
  AVAILABLE: 2,
  WRAPPING_UP: 3
};

goog.object.extend(exports, proto.wssync);
